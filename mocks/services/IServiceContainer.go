// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	cours "github.com/corentings/stouuf-bot/commands/cours"
	karma "github.com/corentings/stouuf-bot/commands/karma"

	mock "github.com/stretchr/testify/mock"
)

// IServiceContainer is an autogenerated mock type for the IServiceContainer type
type IServiceContainer struct {
	mock.Mock
}

// InjectCoursCommandHandler provides a mock function with given fields:
func (_m *IServiceContainer) InjectCoursCommandHandler() cours.CoursCommand {
	ret := _m.Called()

	var r0 cours.CoursCommand
	if rf, ok := ret.Get(0).(func() cours.CoursCommand); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(cours.CoursCommand)
	}

	return r0
}

// InjectKarmaCommandHandler provides a mock function with given fields:
func (_m *IServiceContainer) InjectKarmaCommandHandler() karma.KarmaCommand {
	ret := _m.Called()

	var r0 karma.KarmaCommand
	if rf, ok := ret.Get(0).(func() karma.KarmaCommand); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(karma.KarmaCommand)
	}

	return r0
}

type mockConstructorTestingTNewIServiceContainer interface {
	mock.TestingT
	Cleanup(func())
}

// NewIServiceContainer creates a new instance of IServiceContainer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIServiceContainer(t mockConstructorTestingTNewIServiceContainer) *IServiceContainer {
	mock := &IServiceContainer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
